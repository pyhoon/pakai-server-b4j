AppType=StandardJava
Build1=Default,b4j.webapi,hu2_acceptall
File1=config.example
File2=main.html
FileGroup1=Default Group
FileGroup2=Default Group
Group=Default Group
Library1=byteconverter
Library2=jcore
Library3=jserver
Library4=json
Library5=keyvaluestore
Library6=javaobject
Module1=ApiHandler
Module2=DataController
Module3=HelpHandler
Module4=HttpsFilter
Module5=MinimaList
Module6=Utility
Module7=WebUtils
NumberOfFiles=2
NumberOfLibraries=6
NumberOfModules=7
Version=9.8
@EndOfDesignText@
' Name: 			Web API Template (MinimaList Edition)
' Description: 		Non-UI application (console / server application)
' Version: 			2.00

' Objects folder: file:///C:/B4X/Development/Web%20API%20Server%202.00/Objects (Bring to front)
' Objects folder: ide://run?file=%WINDIR%\SysWOW64\explorer.exe&Args=%PROJECT%\Objects

' Main module: 		ide://goto?Module=Main&Sub=ConfigureServer
' DataController: 	ide://goto?Module=DataController&Sub=GetData
' ApiHandler: 		ide://goto?Module=ApiHandler&Sub=ProcessRequest
' HelpHandler: 		ide://goto?Module=HelpHandler&Sub=GenerateResponseScript

' Click to browse: http://127.0.0.1:8080/web/help
' Click to create Publish.zip: ide://run?file=%JAVABIN%\jar.exe&WorkingDirectory=../Objects&Args=-cMf&Args=Publish.zip&Args=www&Args=*.jar&Args=*.ini&Args=*.db&Args=help.html&Args=help.js
#Region Project Attributes 
	#CommandLineArgs:
	#MergeLibraries: True
#End Region

Sub Process_Globals
	Public srvr As Server
	'Public AUTH As AUTH
	'Public DB As DataConnector
	'Public JAT As JSONWebToken
	'Public JRT As JSONWebToken
	Public ROOT_URL As String
	Public ROOT_PATH As String
	Public API_PATH As String
	Public API_NAME As String
	Public API_VERSIONING As String
	Public SERVER_PORT As Int = 8080
	Public SSL_PORT As Int
	'Public TIMEZONE As Int
	'Public SERVER_TIME As String
	Public Config As Map
	Public Element As Element
	Public Controllers As List
	Public SimpleResponse As Boolean
	Public SimpleResponseFormat As String
	'Public AUTHENTICATION_TYPE As String
	'Public SESSIONS_ENABLED As Boolean
	'Public COOKIES_ENABLED As Boolean
	'Public COOKIES_EXPIRATION As Long
	Public KVS_ENABLED As Boolean
	Public KVS As KeyValueStore
	Public Minima As MinimaList
	Public const VERSION As String = "2.00"
	'Public const PREFIX As String = "WebAPI_v200_"
	'Public Secret As Secret
	'Type Secret (Access_Token As String, Refresh_Token As String)
	Type ApiElement (Name As String, Versioning As Boolean)
	Type WebElement (Root As String, Path As String)
	Type Element (Web As WebElement, Api As ApiElement, Elements As List, PathIndex As Int, ApiVersionIndex As Int, ApiControllerIndex As Int, WebControllerIndex As Int)
End Sub

Sub AppStart (Args() As String)
	' Read environment settings
	If Not(File.Exists(File.DirApp, "config.ini")) Then
		File.Copy(File.DirAssets, "config.example", File.DirApp, "config.ini")
	End If
	Config = Utility.ReadMapFile(File.DirApp, "config.ini")
	Config.Put("VERSION", VERSION)
	srvr.Initialize("")		' Create the server
	Minima.Initialize		' Initialize MinimaList
	ConfigureServer			' Configure the server
	srvr.Start				' Start the server
	StartMessageLoop
End Sub

Public Sub ConfigureWelcomeText
	Log($"Web API server (version = ${VERSION}) is running on port ${srvr.Port}${IIf(srvr.SslPort > 0, $" (redirecting to port ${srvr.SslPort})"$, "")}"$)
	Log($"Open the following URL from your web browser (if help is enabled)"$)
	Log(ROOT_URL & ROOT_PATH & "help")
	' Open a web browser and navigate to: http://127.0.0.1:8080/web/help
End Sub

Private Sub ConfigureServer
	'ConfigurePort								' Server Port
	'ConfigureSSL								' SSL Port
	'ConfigureCORS								' CrossOriginFilter
	'ConfigureStaticFiles 						' Configure Static Files Folder and Allow Browsing Permission
	'ConfigureTimezone							' Adjust timezone if server located in different timezone
	ConfigurePaths								' App URL / Paths
	ConfigureElements							' Pretty URL structures / hierarchy
	ConfigureHandlers							' Server Handlers
	ConfigureControllers						' App Controllers
	ConfigureResponse							' JSON Response Format
	ConfigureWelcomeText						' Show information in Logs when server starts
	ConfigureKeyValueStore						' Persistent Storage for MinimaList
	'ConfigureDatabase							' Database connection and default queries
	'ConfigureSessions							' Enable Sessions
	'ConfigureCookies							' Enable Cookies
	'ConfigureTokenAuth							' Enable Token Authentication
	'ConfigureBasicAuth							' Enable Basic Authentication Filter
	'ConfigureJWTAuth							' Enable JSON Web Token Authentication
	
	' For Basic or JWT Auth
	'AUTH.CLIENT_ID = "web-202301151435-web-api-200.computerise.net"		' username
	'AUTH.CLIENT_SECRET = "DE005AC6-58DA-254F-B16D-693D63E7275D"			' password
	'If AUTHENTICATION_TYPE <> "" Then LogColor($"Authentication: ${AUTHENTICATION_TYPE}"$, -65536)
End Sub

Public Sub ConfigurePort
	SERVER_PORT = Config.Get("ServerPort")
	If SERVER_PORT = 0 Then
		Log($"Server Port is not set!"$)
		Log($"Application is terminated."$)
		ExitApplication
	End If
	srvr.Port = SERVER_PORT
End Sub

Public Sub ConfigurePaths
	ROOT_URL = Config.Get("ROOT_URL")
	If SERVER_PORT <> 80 Then
		ROOT_URL = ROOT_URL & ":" & SERVER_PORT
	End If
	If SSL_PORT <> 0 Then
		' Update ROOT_URL
		ROOT_URL = ROOT_URL.Replace("http:", "https:")
		ROOT_URL = ROOT_URL.Replace($":${SERVER_PORT}"$, $":${SSL_PORT}"$)
	End If
	Config.Put("ROOT_URL", ROOT_URL)
	
	ROOT_PATH = Config.Get("ROOT_PATH")
	If ROOT_PATH = "" Then ROOT_PATH = "/"
	If ROOT_PATH <> "/" Then
		If ROOT_PATH.StartsWith("/") = False Then ROOT_PATH = "/" & ROOT_PATH
		If ROOT_PATH.EndsWith("/") = False Then ROOT_PATH = ROOT_PATH & "/"
	End If
	Config.Put("ROOT_PATH", ROOT_PATH)
	
	API_NAME = Config.Get("API_NAME")
	If API_NAME.Contains("/") Then
		Log($"API name cannot contains forward slash symbol!"$)
		Log($"Application is terminated."$)
		ExitApplication
		Return
	End If
	API_PATH = IIf(API_NAME.Length > 0, API_NAME & "/", "")
	API_VERSIONING = Config.Get("API_VERSIONING").As(String).ToUpperCase
End Sub

' Configure this after ConfigurePaths
Public Sub ConfigureElements
	Element.Initialize
	Element.Elements.Initialize
	
	Element.Web.Root = "/" ' just a placeholder
	Element.Elements.Add(Element.Web.Root)
	
	Element.Web.Path = ROOT_PATH
	If Element.Web.Path.EqualsIgnoreCase("/") = False Then
		Element.Elements.Add(Element.Web.Path)
		Element.PathIndex = 1
	End If
	
	Element.Api.Name = API_NAME
	If Element.Api.Name.EqualsIgnoreCase("") = False Then
		Element.Elements.Add(Element.Api.Name)
	End If
	
	If API_VERSIONING = "TRUE" Then
		Element.Api.Versioning = True
		Element.Elements.Add("version") ' just a placeholder
	Else
		Element.Api.Versioning = False
	End If
	
	Element.ApiVersionIndex = Element.Elements.Size - 1
	Element.ApiControllerIndex = Element.Elements.Size
	Element.WebControllerIndex = Element.Elements.Size - IIf(Element.Api.Name.EqualsIgnoreCase(""), 0, 1) - IIf(Element.Api.Versioning, 1, 0) ' or just Element.PathIndex + 1
	
'	#If debug
'	Dim i As Int
'	For Each item In Element.Elements
'		Log($"${i} - ${item}"$)
'		i = i + 1
'	Next
'	Log("PathIndex=" & Element.PathIndex)
'	Log("WebControllerIndex=" & Element.WebControllerIndex)
'	Log("ApiVersionIndex=" & Element.ApiVersionIndex)
'	Log("ApiControllerIndex=" & Element.ApiControllerIndex)
'	#End If
End Sub

' Configure this after ConfigureElements
Public Sub ConfigureHandlers
	If API_NAME.EqualsIgnoreCase("") Then	' API / Web Only
		srvr.AddHandler(ROOT_PATH & "*", "ApiHandler", False) 				' Add API handler
	Else									' API + Web routes (recommended)
		'srvr.AddHandler(ROOT_PATH & "*", "WebHandler", False) 				' Add Web handler
		srvr.AddHandler(ROOT_PATH & API_PATH & "*", "ApiHandler", False) 	' Add API handler
		srvr.AddHandler(ROOT_PATH & "help", "HelpHandler", False) 			' Add Help page (optional)
		'srvr.AddWebSocket("/time", "WSTime")
	End If
End Sub

' Add list of controllers for generating API documentation
' API is still available if controller is not in this list
' To disable an API or Web routes, comment the code in ApiHandler or WebHandler
Public Sub ConfigureControllers
	Controllers.Initialize
	Controllers.Add("DataController")
End Sub

' SimpleResponse: If set to True then response is returning JSON without standard structure
' SimpleResponseFormat: List, Map
' Note: HelpHandler only works with standard JSON response format, unless explicitly set in controller
Public Sub ConfigureResponse
	SimpleResponse = True
	SimpleResponseFormat = "Map"
End Sub

Public Sub ConfigureKeyValueStore
	KVS.Initialize(File.DirApp, "kvs.dat")
	' Load values
	Minima.List = KVS.GetDefault("List", Minima.List)
	KVS_ENABLED = True
	Log("KeyValueStore is enabled")
End Sub

'Public Sub ConfigureDatabase
'	' Initialize a database connector object
'	DB.Initialize(Config)
'End Sub

'Public Sub ConfigureSSL
'	SSL_PORT = Config.Get("SSLPort") : If IsNumber(SSL_PORT) = False Then SSL_PORT = 0
'	If SSL_PORT = 0 Then Return
'	
'	Dim KeyStoreDir As String = Config.Get("SSL_KEYSTORE_DIR")
'	Dim KeyStoreFile As String = Config.Get("SSL_KEYSTORE_FILE")
'	Dim KeyStorePassword As String = Config.Get("SSL_KEYSTORE_PASSWORD")
'	
'	Dim ssl As SslConfiguration
'	ssl.Initialize
'	ssl.SetKeyStorePath(KeyStoreDir, KeyStoreFile)
'	ssl.KeyStorePassword = KeyStorePassword
'	'ssl.KeyManagerPassword = ""
'	srvr.SetSslConfiguration(ssl, SSL_PORT)
'	
'	'add filter to redirect all traffic from http to https (optional)
'	srvr.AddFilter("/*", "HttpsFilter", False)
'End Sub

'Public Sub ConfigureCORS
'	' Note: If you have enabled JWT then you may not need this
'	#Region Example
'	' allowedOrigins = "*" or "http://google.com"
'	' allowedMethods = "*" or "GET,POST,HEAD"
'	' allowedHeaders = "*" or "X-Requested-With,Content-Type,Accept,Origin"
'	' Eg. ConfigureCORS(ROOT_PATH & "account/*", "*", "", "")
'	' Reference: https://www.b4x.com/android/forum/threads/jetty-cross-origin-filter-to-be-added-to-jserver-library.85641/
'	#End Region
'	Dim Paths As List
'	Paths.Initialize
'	
'	Paths.Add(CreateMap("path": "/*", "origins": "*", "methods": "*", "headers": "*"))
'	
'	For Each Item As Map In Paths
'		Dim cors As CorsFilter
'		cors.Initialize(Item.Get("path"), _
'		CreateMap( _
'		"allowedOrigins": Item.Get("origins"), _
'		"allowedMethods": Item.Get("methods"), _
'		"allowedHeaders": Item.Get("headers"), _
'		"allowCredentials": "true", _
'		"preflightMaxAge": 1800, _
'		"chainPreflight": "false"))
'		cors.AddToServer(srvr)
'	Next
'End Sub

'Public Sub ConfigureStaticFiles
'	srvr.StaticFilesFolder = File.Combine(File.DirApp, "www")
'	srvr.SetStaticFilesOptions(CreateMap("dirAllowed": False))
'End Sub

'Public Sub ConfigureTimezone
'	TIMEZONE = Config.Get("TimeZone") : If IsNumber(TIMEZONE) = False Then TIMEZONE = 0
'End Sub

' Use Sessions
'Public Sub ConfigureSessions
'	SESSIONS_ENABLED = True
'End Sub

' Use Cookies
'Public Sub ConfigureCookies
'	COOKIES_ENABLED = True
'	COOKIES_EXPIRATION = 90 * 24 * 60 * 60 			' in seconds = 90 days
'End Sub

'Public Sub ConfigureBasicAuth
'	AUTHENTICATION_TYPE = "BASIC AUTHENTICATION"
'	
'	Dim Paths As List
'	Paths.Initialize
'	Paths.Add(ROOT_PATH & "dashboard")
'	
'	For Each path In Paths
'		'Log(path)
'		srvr.AddFilter(path, "BasicAuthFilter", False)
'	Next
'End Sub

' Do not use this configuration
' It is not completed/experimental
'Public Sub ConfigureTokenAuth
'	AUTHENTICATION_TYPE = "TOKEN AUTHENTICATION"
'	
'	Dim Paths As List
'	Paths.Initialize
'
'	For Each path In Paths
'		srvr.AddFilter(path, "TokenAuthFilter", False)
'	Next
'End Sub

' Make sure Database is created and server has restarted at first run
'Public Sub ConfigureJWTAuth
'	If DB.Busy Then
'		LogColor("JSON Web Token is Not Enabled", -65536)
'		Return
'	End If
'
'	' Enable this only after database is generated
'	' You need to restart the server after first run if database not exist
'	Dim con As SQL = DB.GetConnection
'	Dim res As ResultSet = con.ExecQuery(DB.Queries.Get("SELECT_LAST_TOKENSECRET"))
'	Do While res.NextRow
'		Secret.Access_Token = res.GetString("access_token_secret")
'		Secret.Refresh_Token = res.GetString("refresh_token_secret")
'	Loop
'	res.Close
'	DB.CloseDB(con)
'
'	JAT.Initialize("HMAC256", Secret.Access_Token, False)
'	JAT.Issuer = ROOT_URL
'	
'	JRT.Initialize("HMAC256", Secret.Refresh_Token, False)
'	JRT.Issuer = ROOT_URL
'	
'	Dim Paths As List
'	Paths.Initialize
'	'Paths.Add(ROOT_PATH & "dashboard")
'	
'	For Each path In Paths
'		'Log(path)
'		srvr.AddFilter(path, "JWTAuthFilter", False)
'	Next
'	AUTHENTICATION_TYPE = "JSON WEB TOKEN AUTHENTICATION"
'End Sub