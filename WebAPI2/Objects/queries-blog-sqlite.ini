# Product:	SQL commands for Web API Server Template (for SQLite Backend)
# Version: 	2.00 (beta 3)
# Lines starting with '#' are comments.
# Backslash character at the end of line means that the command continues in the next line.

# Get New ID
GET_LAST_INSERT_ID=SELECT LAST_INSERT_ROWID()


# CATEGORY
CREATE_TABLE_TBL_CATEGORY=CREATE TABLE IF NOT EXISTS "tbl_category" ( \
  "id"              INTEGER, \
  "category_name"   TEXT NULL, \
  "category_status" INTEGER DEFAULT 0, \
  "created_date"    TEXT DEFAULT (datetime('now', 'localtime')), \
  "modified_date"   TEXT NULL, \
  PRIMARY KEY("id" AUTOINCREMENT) \
)

INSERT_DUMMY_TBL_CATEGORY=INSERT INTO "tbl_category" ("category_name") VALUES ('Uncategorized'), ('General')

INSERT_NEW_CATEGORY=INSERT INTO "tbl_category" ("category_name") SELECT ?

SELECT_ALL_CATEGORIES=SELECT * FROM "tbl_category"

SELECT_CATEGORY_BY_ID=SELECT * FROM "tbl_category" WHERE "id" = ?

SELECT_ID_BY_CATEGORY_NAME=SELECT "id" FROM "tbl_category" WHERE "category_name" = ?

UPDATE_CATEGORY_BY_ID=UPDATE "tbl_category" SET "category_name" = ? WHERE "id" = ?

DELETE_CATEGORY_BY_ID=DELETE FROM "tbl_category" WHERE "id" = ?


# PRODUCT
CREATE_TABLE_TBL_POSTS=CREATE TABLE IF NOT EXISTS "tbl_posts" ( \
  "id"            INTEGER NOT NULL, \
  "category_id"   INTEGER NOT NULL, \
  "post_slug"     TEXT, \
  "post_title"    TEXT, \
  "post_body"     TEXT, \
  "post_status"   INTEGER DEFAULT '1', \
  "created_date"  TEXT DEFAULT (datetime('now', 'localtime')), \
  "modified_date" TEXT, \
  PRIMARY KEY ("id" AUTOINCREMENT), \
  FOREIGN KEY ("category_id") REFERENCES "tbl_category" ("id") \
)

INSERT_DUMMY_TBL_POSTS=INSERT INTO "tbl_posts" \
("category_id", "post_slug", "post_title", "post_body") VALUES \
(1,	'my-first-blog',	'My First Blog', 'You can delete or unpublish this post')

INSERT_NEW_POST=INSERT INTO "tbl_posts" ("category_id", "post_slug", "post_title", "post_body", "post_status") \
 SELECT ?, ?, ?, ?, ?

SELECT_ALL_POSTS=SELECT P.*, C."category_name" FROM "tbl_posts" P \
JOIN "tbl_category" C ON P."category_id" = C."id"

SELECT_POST_BY_ID=SELECT P.*, C."category_name" FROM "tbl_posts" P \
JOIN "tbl_category" C ON P."category_id" = C."id" WHERE P."id" = ?

SELECT_ID_BY_POST_SLUG=SELECT "id" FROM "tbl_posts" WHERE "post_slug" = ?

UPDATE_POST_BY_ID=UPDATE "tbl_posts" SET "category_id" = ?, "post_slug" = ?, "post_title" = ?, "post_body" = ?, \
 "post_status" = ?, "modified_date" = datetime('now', 'localtime') WHERE "id" = ?

UPDATE_POST_STATUS_BY_ID=UPDATE "tbl_posts" SET "post_status" = ?, "modified_date" = datetime('now', 'localtime') WHERE "id" = ?

DELETE_POST_BY_ID=DELETE FROM "tbl_posts" WHERE "id" = ?


# SEARCH
SELECT_CATEGORY_BY_TITLE=SELECT * FROM "tbl_category" WHERE "category_name" LIKE ?

SELECT_POST_BY_SLUG=SELECT P.*, C."category_name" FROM "tbl_posts" P \
JOIN "tbl_category" C ON P."category_id" = C."id" WHERE P."post_slug" = ?

SELECT_POST_BY_TITLE=SELECT P.*, C."category_name" FROM "tbl_posts" P \
JOIN "tbl_category" C ON P."category_id" = C."id" WHERE P."post_title" LIKE ?

SELECT_POST_BY_CATEGORY_ID=SELECT P.*, C."category_name" FROM "tbl_posts" P \
JOIN "tbl_category" C ON P."category_id" = C."id" WHERE P."category_id" = ?

SELECT_POST_BY_CATEGORY_NAME=SELECT P.* FROM "tbl_posts" P \
JOIN "tbl_category" C ON P."category_id" = C."id" WHERE C."category_name" = ?

SEARCH_POST_BY_CATEGORY_TITLE_AND_BODY_ONEWORD_ORDERED=SELECT P."id" AS aa, \
P."post_slug" AS bb, \
C."category_name" AS cc, \
P."post_title" AS dd, \
P."post_body" AS ee, \
P."post_status" AS ff, \
P."created_date" AS gg, \
P."category_id" AS hh \
FROM "tbl_posts" P JOIN "tbl_category" C ON P."category_id" = C."id" \
WHERE C."category_name" LIKE ? OR P."post_title" LIKE ? OR P."post_body" LIKE ?

SEARCH_POST_BY_CATEGORY_TITLE_AND_BODY_TWOWORDS_ORDERED=SELECT P."id" AS aa, \
P."post_slug" AS bb, \
C."category_name" AS cc, \
P."post_title" AS dd, \
P."post_body" AS ee, \
P."post_status" AS ff, \
P."created_date" AS gg, \
P."category_id" AS hh \
FROM "tbl_posts" P JOIN "tbl_category" C ON P."category_id" = C."id" \
WHERE C."category_name" LIKE ? OR P."post_slug" LIKE ? OR P."post_title" LIKE ? \
OR C."category_name" LIKE ? OR P."post_title" LIKE ? OR P."post_body" LIKE ?


# USERS
CREATE_TABLE_TBL_USERS=CREATE TABLE IF NOT EXISTS "tbl_users" ( \
  "id" INTEGER, \
  "user_name" TEXT, \
  "user_email" TEXT, \
  "user_hash" TEXT, \
  "user_salt" TEXT, \
  "user_location" TEXT, \
  "user_image_file" TEXT, \
  "user_password_reset_code" TEXT, \
  "user_activation_code" TEXT, \
  "user_activation_flag" TEXT, \
  "user_activated_date" TEXT, \
  "user_last_login_date" TEXT, \
  "user_login_count" INTEGER DEFAULT 0, \
  "user_active" INTEGER DEFAULT 0, \
  "created_date" TEXT DEFAULT (datetime('now', 'localtime')), \
  "modified_date" TEXT, \
  "deleted_date" TEXT, \
  PRIMARY KEY ("id" AUTOINCREMENT) \
)


INSERT_NEW_USER=INSERT INTO "tbl_users" \
("user_email", \
"user_name", \
"user_hash", \
"user_salt", \
"user_activation_code", \
"user_activation_flag") \
VALUES (?, ?, ?, ?, ?, ?)

SELECT_USER_SALT_BY_EMAIL=SELECT "user_salt" \
FROM "tbl_users" \
WHERE "user_email" = ?

UPDATE_USER_FLAG_BY_EMAIL_AND_ACTIVATION_CODE=UPDATE "tbl_users" SET \
"user_activation_flag" = ?, \
"user_activation_code" = ?, \
"modified_date" = datetime('now', 'localtime') \
WHERE "user_email" = ? \
AND "user_activation_code" = ?

SELECT_USER_EMAIL_BY_ACTIVATION_CODE=SELECT "id" AS "user_id", \
"user_name", \
"user_email" \
FROM "tbl_users" \
WHERE "user_activation_code" = ?

SELECT_USER_EMAIL_BY_CODE=SELECT "id" AS "user_id", \
"user_name", \
"user_email" \
FROM "tbl_users" \
WHERE "user_password_reset_code" = ?

SELECT_USER_DATA_BY_EMAIL_AND_HASH=SELECT "id" AS "user_id", \
"user_name", \
"user_email", \
IFNULL("user_location", '') AS "user_location", \
"user_activation_flag" \
FROM "tbl_users" \
WHERE "user_email" = ? \
AND "user_hash" = ?

SELECT_USER_DATA_BY_EMAIL=SELECT "id" AS "user_id", \
"user_name", \
"user_email" \
FROM "tbl_users" \
WHERE "user_email" = ?

SELECT_USER_DATA_BY_ID=SELECT "id" AS "user_id", \
"user_name", \
"user_email" \
FROM "tbl_users" \
WHERE "id" = ?

SELECT_USER_DATA_BY_TOKEN=SELECT "id" AS "user_id", \
"user_name", \
"user_email", \
IFNULL("user_location", '') AS "user_location", \
IFNULL("user_token", '') AS "user_token", \
"user_activation_flag" \
FROM "tbl_users" \
WHERE "user_token" = ?

UPDATE_USER_RESET_CODE_BY_EMAIL=UPDATE "tbl_users" SET \
"user_password_reset_code" = ?, \
"modified_date" = datetime('now', 'localtime') \
WHERE "user_email" = ?

UPDATE_USER_DATA_BY_EMAIL_AND_CODE=UPDATE "tbl_users" SET \
"user_hash" = ?, \
"user_salt" = ?, \
"user_password_reset_code" = ?, \
"modified_date" = datetime('now', 'localtime') \
WHERE "user_email" = ? \
AND "user_password_reset_code" = ?

UPDATE_USER_DATA_BY_EMAIL_HASH=UPDATE "tbl_users" SET \
"user_hash" = ?, \
"user_salt" = ?, \
"user_password_reset_code" = ?, \
"modified_date" = datetime('now', 'localtime') \
WHERE "user_email" = ? \
AND "user_hash" = ?


# USERS LOG
CREATE_TABLE_TBL_USERS_LOG=CREATE TABLE IF NOT EXISTS "tbl_users_log" ( \
  "id" INTEGER, \
  "log_view" TEXT, \
  "log_type" TEXT, \
  "log_text" TEXT, \
  "log_user" INTEGER, \
  "created_date" TEXT DEFAULT (datetime('now', 'localtime')), \
  "modified_date" TEXT, \
  "deleted_date" TEXT, \
  PRIMARY KEY ("id" AUTOINCREMENT) \
)


# ERROR
CREATE_TABLE_TBL_ERROR=CREATE TABLE IF NOT EXISTS "tbl_error" ( \
  "id" INTEGER, \
  "error_text" TEXT, \
  "created_date" TEXT DEFAULT (datetime('now', 'localtime')), \
  "modified_date" TEXT, \
  "deleted_date" TEXT, \
  PRIMARY KEY ("id" AUTOINCREMENT) \
)


# CLIENT MASTER
CREATE_TABLE_CLIENTMASTER=CREATE TABLE IF NOT EXISTS "ClientMaster" ( \
	"ID" INTEGER, \
	"ClientID" TEXT NOT NULL, \
	"ClientSecret" TEXT NOT NULL DEFAULT (hex(randomblob(4)) || '-' || hex(randomblob(2)) || '-' || hex(randomblob(2)) || '-' || hex(randomblob(2)) || '-' || hex(randomblob(6))), \
	"ClientName" TEXT NOT NULL, \
	"Active" INTEGER NOT NULL DEFAULT 0, \
	"RefreshTokenLifeTime" INTEGER NOT NULL, \
	"AllowedOrigin"	TEXT NOT NULL, \
	PRIMARY KEY("ID" AUTOINCREMENT) \
)

INSERT_DUMMY_CLIENTMASTER=INSERT INTO "ClientMaster" \
("ClientID", "ClientSecret", "ClientName", "Active", "RefreshTokenLifeTime", "AllowedOrigin") VALUES \
('web-202301151435-web-api-200.computerise.net', 'DE005AC6-58DA-254F-B16D-693D63E7275D', 'Web App', 1, 600000, 'http://127.0.0.1')

INSERT_NEW_CLIENTMASTER=INSERT INTO "ClientMaster" \
(	"ClientID", \
	"ClientSecret", \
	"ClientName", \
	"Active", \
	"RefreshTokenLifeTime", \
	"AllowedOrigin" ) \
VALUES (?, ?, ?, ?, ?, ?)


# TOKEN SECRET
CREATE_TABLE_TOKENSECRET=CREATE TABLE IF NOT EXISTS "TokenSecret" ( \
	"id"                   INTEGER, \
	"access_token_secret"  TEXT DEFAULT(hex(randomblob(4)) || '-' || hex(randomblob(2)) || '-' || hex(randomblob(2)) || '-' || hex(randomblob(2)) || '-' || hex(randomblob(6))), \
	"refresh_token_secret" TEXT DEFAULT(hex(randomblob(4)) || '-' || hex(randomblob(2)) || '-' || hex(randomblob(2)) || '-' || hex(randomblob(2)) || '-' || hex(randomblob(6))), \
	"active"               INTEGER DEFAULT 1, \
	"created_date"         TEXT DEFAULT (datetime('now', 'localtime')), \
	"modified_date"        TEXT, \
	PRIMARY KEY("id" AUTOINCREMENT) \
)

INSERT_NEW_TOKENSECRET=INSERT INTO "TokenSecret" ( "active" ) VALUES (1)

UPDATE_OLD_TOKENSECRET=UPDATE "TokenSecret" SET "active" = 0

SELECT_LAST_TOKENSECRET=SELECT * FROM "TokenSecret" WHERE "active" = 1 ORDER BY "id" DESC LIMIT 1


# REFRESH TOKEN
CREATE_TABLE_REFRESHTOKEN=CREATE TABLE IF NOT EXISTS "RefreshToken" ( \
	"ID"              TEXT, \
	"UserName"        TEXT, \
	"ClientID"        TEXT, \
	"IssuedTime"      INTEGER, \
	"ExpiredTime"     INTEGER, \
	"ProtectedTicket" TEXT, \
	PRIMARY KEY("ID") \
)
INSERT_NEW_REFRESHTOKEN=INSERT INTO "RefreshToken" \
(	"UserName", \
	"ClientID", \
	"IssuedTime", \
	"ExpiredTime", \
	"ProtectedTicket" ) \
VALUES (?, ?, ?, ?, ?)